name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check System Info
      run: |
        echo "Node version: $(node -v)"
        echo "NPM version: $(npm -v)"
        echo "Architecture: $(uname -m)"
        echo "OS: $(uname -s)"
        
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: '18.18.0'
        architecture: 'x64'
        cache: 'npm'

    - name: Set up environment files
      run: |
        # Create production .env file directly from secrets
        echo "NODE_ENV=production" > .env
        echo "PORT=3000" >> .env
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
        echo "NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }}" >> .env
        echo "NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}" >> .env
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        
        # Copy for build process
        cp .env .env.local

    - name: Install dependencies
      run: npm install --legacy-peer-deps
        
    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
        GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

    - name: Prepare for deployment
      run: |
        chmod -R 755 .next
        chmod 644 package.json

    - name: Deploy to DigitalOcean
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        source: ".next,package.json,package-lock.json,prisma,public,.env"
        target: "/var/www/rogan-writer"
        strip_components: 0
        rm: true

    - name: Start application
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DIGITALOCEAN_HOST }}
        username: ${{ secrets.DIGITALOCEAN_USERNAME }}
        key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
        script: |
          cd /var/www/rogan-writer
          npm install --omit=dev --legacy-peer-deps
          npx prisma migrate deploy || true
          pm2 stop rogan-writer || true
          pm2 delete rogan-writer || true
          NODE_ENV=production pm2 start npm --name "rogan-writer" -- start 